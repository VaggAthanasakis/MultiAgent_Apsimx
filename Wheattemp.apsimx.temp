{
  "$type": "Models.Core.Simulations, Models",
  "Version": 188,
  "Name": "Simulations",
  "ResourceName": null,
  "Children": [
    {
      "$type": "Models.Core.Simulation, Models",
      "Descriptors": null,
      "Name": "Simulation",
      "ResourceName": null,
      "Children": [
        {
          "$type": "Models.Clock, Models",
          "Start": "2025-03-04T00:00:00",
          "End": "2025-03-20T00:00:00",
          "Name": "Clock",
          "ResourceName": null,
          "Children": [],
          "Enabled": true,
          "ReadOnly": false
        },
        {
          "$type": "Models.Summary, Models",
          "Verbosity": 3,
          "Name": "Summary",
          "ResourceName": null,
          "Children": [],
          "Enabled": true,
          "ReadOnly": false
        },
        {
          "$type": "Models.Climate.Weather, Models",
          "ConstantsFile": "/home/eathanasakis/Intership/MultiAgent_Apsimx/APSIM_FILES/Heraklion.ini",
          "FileName": "Heraklion.csv",
          "ExcelWorkSheetName": "",
          "Latitude": 39.3614,
          "Tav": 0.9705882352941176,
          "Amp": 0.0,
          "Name": "Weather",
          "ResourceName": null,
          "Children": [],
          "Enabled": true,
          "ReadOnly": false
        },
        {
          "$type": "Models.Soils.Arbitrator.SoilArbitrator, Models",
          "Name": "SoilArbitrator",
          "ResourceName": null,
          "Children": [],
          "Enabled": true,
          "ReadOnly": false
        },
        {
          "$type": "Models.MicroClimate, Models",
          "a_interception": 0.0,
          "b_interception": 1.0,
          "c_interception": 0.0,
          "d_interception": 0.0,
          "SoilHeatFluxFraction": 0.4,
          "MinimumHeightDiffForNewLayer": 0.0,
          "NightInterceptionFraction": 0.5,
          "ReferenceHeight": 2.0,
          "Name": "MicroClimate",
          "ResourceName": "MicroClimate",
          "Children": [],
          "Enabled": true,
          "ReadOnly": false
        },
        {
          "$type": "Models.Core.Zone, Models",
          "Area": 1.0,
          "Slope": 0.0,
          "AspectAngle": 0.0,
          "Altitude": 50.0,
          "Name": "Field",
          "ResourceName": null,
          "Children": [
            {
              "$type": "Models.Report, Models",
              "VariableNames": [
                "[Clock].Today",
                "[Wheat].LAI",
                "[Wheat].Phenology.Zadok.Stage",
                "[Wheat].Phenology.CurrentStageName",
                "[Wheat].AboveGround.Wt",
                "[Wheat].AboveGround.N",
                "[Wheat].Grain.Total.Wt*10 as yield_per_square_meter",
                "[Wheat].Grain.Total.Wt * 0.01 as yield_tonnes_per_hectare",
                "",
                "",
                "[Wheat].Grain.Protein",
                "[Wheat].Grain.Size",
                "[Wheat].Grain.Number",
                "[Wheat].Grain.Total.Wt",
                "[Wheat].Grain.Total.N",
                "[Wheat].Total.Wt",
                "",
                "[Irrigation].IrrigationApplied as waterApplied",
                " "
              ],
              "EventNames": [
                "[Clock].DoReport"
              ],
              "GroupByVariableName": null,
              "Name": "Report",
              "ResourceName": null,
              "Children": [],
              "Enabled": true,
              "ReadOnly": false
            },
            {
              "$type": "Models.Fertiliser, Models",
              "Name": "Fertiliser",
              "ResourceName": "Fertiliser",
              "Children": [],
              "Enabled": true,
              "ReadOnly": false
            },
            {
              "$type": "Models.Irrigation, Models",
              "Name": "Irrigation",
              "ResourceName": null,
              "Children": [],
              "Enabled": true,
              "ReadOnly": false
            },
            {
              "$type": "Models.Soils.Soil, Models",
              "RecordNumber": 104,
              "ASCOrder": "Vertosol",
              "ASCSubOrder": "Black",
              "SoilType": "Clay",
              "LocalName": null,
              "Site": "Norwin",
              "NearestTown": "Norwin",
              "Region": "Darling Downs and Granite Belt",
              "State": "Queensland",
              "Country": "Australia",
              "NaturalVegetation": "Qld. Bluegrass, possible Qld. Blue gum",
              "ApsoilNumber": "900",
              "Latitude": 39.3614,
              "Longitude": 22.093,
              "LocationAccuracy": " +/- 20m",
              "YearOfSampling": "0",
              "DataSource": "CSIRO Sustainable Ecosystems, Toowoomba; Characteriesd as part of the GRDC funded project\"Doing it better, doing it smarter, managing soil water in Australian agriculture' 2011",
              "Comments": "Clay - OC, CLL for all crops estimated-based on Bongeen Mywybilla Soil No1",
              "Name": "Soil",
              "ResourceName": null,
              "Children": [
                {
                  "$type": "Models.Soils.Physical, Models",
                  "Thickness": [
                    150.0,
                    150.0,
                    300.0,
                    300.0,
                    300.0,
                    300.0,
                    300.0
                  ],
                  "ParticleSizeSand": [
                    20.0,
                    20.0,
                    20.0,
                    20.0,
                    20.0,
                    20.0,
                    5.0
                  ],
                  "ParticleSizeSilt": [
                    70.0,
                    70.0,
                    70.0,
                    70.0,
                    70.0,
                    70.0,
                    65.0
                  ],
                  "ParticleSizeClay": [
                    10.0,
                    10.0,
                    10.0,
                    10.0,
                    10.0,
                    10.0,
                    30.0
                  ],
                  "Rocks": [
                    0.0,
                    0.0,
                    0.0,
                    0.0,
                    0.0,
                    0.0,
                    0.0
                  ],
                  "Texture": null,
                  "BD": [
                    1.16,
                    1.16,
                    1.16,
                    1.16,
                    1.16,
                    1.16,
                    1.18749547755906
                  ],
                  "AirDry": [
                    0.130250054518252,
                    0.198689390775399,
                    0.28,
                    0.28,
                    0.28,
                    0.28,
                    0.28
                  ],
                  "LL15": [
                    0.28,
                    0.28,
                    0.28,
                    0.28,
                    0.28,
                    0.28,
                    0.28
                  ],
                  "DUL": [
                    0.36,
                    0.36,
                    0.36,
                    0.36,
                    0.36,
                    0.36,
                    0.452331759845006
                  ],
                  "SAT": [
                    0.56,
                    0.56,
                    0.56,
                    0.56,
                    0.56,
                    0.56,
                    0.521888499034317
                  ],
                  "KS": [
                    20.0,
                    20.0,
                    20.0,
                    20.0,
                    20.0,
                    20.0,
                    20.0
                  ],
                  "BDMetadata": null,
                  "AirDryMetadata": null,
                  "LL15Metadata": null,
                  "DULMetadata": null,
                  "SATMetadata": null,
                  "KSMetadata": null,
                  "RocksMetadata": [
                    null,
                    null,
                    null,
                    null,
                    null,
                    null,
                    null
                  ],
                  "TextureMetadata": null,
                  "ParticleSizeSandMetadata": [
                    null,
                    null,
                    null,
                    null,
                    null,
                    null,
                    null
                  ],
                  "ParticleSizeSiltMetadata": [
                    null,
                    null,
                    null,
                    null,
                    null,
                    null,
                    null
                  ],
                  "ParticleSizeClayMetadata": [
                    null,
                    null,
                    null,
                    null,
                    null,
                    null,
                    null
                  ],
                  "Name": "Physical",
                  "ResourceName": null,
                  "Children": [
                    {
                      "$type": "Models.Soils.SoilCrop, Models",
                      "LL": [
                        0.28,
                        0.28,
                        0.28,
                        0.28,
                        0.28,
                        0.28,
                        0.446
                      ],
                      "KL": [
                        0.06,
                        0.06,
                        0.06,
                        0.04,
                        0.04,
                        0.02,
                        0.01
                      ],
                      "XF": [
                        1.0,
                        1.0,
                        1.0,
                        1.0,
                        1.0,
                        1.0,
                        1.0
                      ],
                      "LLMetadata": [
                        null,
                        null,
                        null,
                        null,
                        null,
                        null,
                        null
                      ],
                      "KLMetadata": [
                        null,
                        null,
                        null,
                        null,
                        null,
                        null,
                        null
                      ],
                      "XFMetadata": [
                        null,
                        null,
                        null,
                        null,
                        null,
                        null,
                        null
                      ],
                      "Name": "WheatSoil",
                      "ResourceName": null,
                      "Children": [],
                      "Enabled": true,
                      "ReadOnly": false
                    }
                  ],
                  "Enabled": true,
                  "ReadOnly": false
                },
                {
                  "$type": "Models.WaterModel.WaterBalance, Models",
                  "SummerDate": "1-Nov",
                  "SummerU": 5.0,
                  "SummerCona": 5.0,
                  "WinterDate": "1-Apr",
                  "WinterU": 5.0,
                  "WinterCona": 5.0,
                  "DiffusConst": 40.0,
                  "DiffusSlope": 16.0,
                  "Salb": 0.12,
                  "CN2Bare": 73.0,
                  "CNRed": 20.0,
                  "CNCov": 0.8,
                  "DischargeWidth": "NaN",
                  "CatchmentArea": "NaN",
                  "PSIDul": -100.0,
                  "Thickness": [
                    150.0,
                    150.0,
                    300.0,
                    300.0,
                    300.0,
                    300.0,
                    300.0
                  ],
                  "SWCON": [
                    0.3,
                    0.3,
                    0.3,
                    0.3,
                    0.3,
                    0.3,
                    0.3
                  ],
                  "KLAT": null,
                  "Name": "SoilWater",
                  "ResourceName": "WaterBalance",
                  "Children": [],
                  "Enabled": true,
                  "ReadOnly": false
                },
                {
                  "$type": "Models.Soils.Organic, Models",
                  "FOMCNRatio": 40.0,
                  "Thickness": [
                    150.0,
                    150.0,
                    300.0,
                    300.0,
                    300.0,
                    300.0,
                    300.0
                  ],
                  "Carbon": [
                    4.53,
                    4.53,
                    0.6,
                    0.3,
                    0.18,
                    0.12,
                    0.12
                  ],
                  "CarbonUnits": 0,
                  "SoilCNRatio": [
                    7.44,
                    7.44,
                    7.44,
                    7.44,
                    7.44,
                    7.44,
                    12.0
                  ],
                  "FBiom": [
                    0.04,
                    0.02,
                    0.02,
                    0.02,
                    0.01,
                    0.01,
                    0.01
                  ],
                  "FInert": [
                    0.4,
                    0.6,
                    0.8,
                    1.0,
                    1.0,
                    1.0,
                    1.0
                  ],
                  "FOM": [
                    347.1290323127564,
                    270.3443621919937,
                    163.97214434990104,
                    99.45413288704063,
                    60.32198083112468,
                    36.58713082867487,
                    22.1912165985086
                  ],
                  "CarbonMetadata": null,
                  "FOMMetadata": null,
                  "Name": "Organic",
                  "ResourceName": null,
                  "Children": [],
                  "Enabled": true,
                  "ReadOnly": false
                },
                {
                  "$type": "Models.Soils.Chemical, Models",
                  "Thickness": [
                    150.0,
                    150.0,
                    300.0,
                    300.0,
                    300.0,
                    300.0,
                    300.0
                  ],
                  "PH": [
                    7.0,
                    7.0,
                    7.0,
                    7.0,
                    7.0,
                    7.0,
                    8.0
                  ],
                  "PHUnits": 0,
                  "EC": [
                    0.304,
                    0.304,
                    0.304,
                    0.304,
                    0.304,
                    0.304,
                    0.0
                  ],
                  "ESP": [
                    0.25,
                    0.25,
                    0.25,
                    0.25,
                    0.25,
                    0.25,
                    0.0
                  ],
                  "CEC": [
                    49.67,
                    49.67,
                    49.67,
                    49.67,
                    49.67,
                    49.67,
                    0.0
                  ],
                  "ECMetadata": [
                    null,
                    null,
                    null,
                    null,
                    null,
                    null,
                    null
                  ],
                  "CLMetadata": null,
                  "ESPMetadata": [
                    null,
                    null,
                    null,
                    null,
                    null,
                    null,
                    null
                  ],
                  "PHMetadata": null,
                  "Name": "Chemical",
                  "ResourceName": null,
                  "Children": [],
                  "Enabled": true,
                  "ReadOnly": false
                },
                {
                  "$type": "Models.Soils.Water, Models",
                  "Thickness": [
                    150.0,
                    150.0,
                    300.0,
                    300.0,
                    300.0,
                    300.0,
                    300.0
                  ],
                  "InitialValues": [
                    0.52100021807301,
                    0.496723476938497,
                    0.488437607673005,
                    0.480296969355493,
                    0.471583596524955,
                    0.457070570557793,
                    0.452331759845006
                  ],
                  "InitialPAWmm": 353.5747054386016,
                  "RelativeTo": "LL15",
                  "FilledFromTop": false,
                  "Name": "Water",
                  "ResourceName": null,
                  "Children": [],
                  "Enabled": true,
                  "ReadOnly": false
                },
                {
                  "$type": "Models.Soils.CERESSoilTemperature, Models",
                  "Name": "Temperature",
                  "ResourceName": null,
                  "Children": [],
                  "Enabled": true,
                  "ReadOnly": false
                },
                {
                  "$type": "Models.Soils.Nutrients.Nutrient, Models",
                  "Name": "Nutrient",
                  "ResourceName": "Nutrient",
                  "Children": [],
                  "Enabled": true,
                  "ReadOnly": false
                },
                {
                  "$type": "Models.Soils.Solute, Models",
                  "Thickness": [
                    150.0,
                    150.0,
                    300.0,
                    300.0,
                    300.0,
                    300.0,
                    300.0
                  ],
                  "InitialValues": [
                    3.1,
                    2.55,
                    1.0,
                    1.0,
                    1.0,
                    1.0,
                    1.0
                  ],
                  "InitialValuesUnits": 0,
                  "WaterTableConcentration": 0.0,
                  "D0": 0.0,
                  "Exco": null,
                  "FIP": null,
                  "DepthConstant": 0.0,
                  "MaxDepthSoluteAccessible": 0.0,
                  "RunoffEffectivenessAtMovingSolute": 0.0,
                  "MaxEffectiveRunoff": 0.0,
                  "Name": "NO3",
                  "ResourceName": null,
                  "Children": [],
                  "Enabled": true,
                  "ReadOnly": false
                },
                {
                  "$type": "Models.Soils.Solute, Models",
                  "Thickness": [
                    150.0,
                    150.0,
                    300.0,
                    300.0,
                    300.0,
                    300.0,
                    300.0
                  ],
                  "InitialValues": [
                    0.1,
                    0.1,
                    0.1,
                    0.1,
                    0.1,
                    0.1,
                    0.1
                  ],
                  "InitialValuesUnits": 0,
                  "WaterTableConcentration": 0.0,
                  "D0": 0.0,
                  "Exco": null,
                  "FIP": null,
                  "DepthConstant": 0.0,
                  "MaxDepthSoluteAccessible": 0.0,
                  "RunoffEffectivenessAtMovingSolute": 0.0,
                  "MaxEffectiveRunoff": 0.0,
                  "Name": "NH4",
                  "ResourceName": null,
                  "Children": [],
                  "Enabled": true,
                  "ReadOnly": false
                },
                {
                  "$type": "Models.Soils.Solute, Models",
                  "Thickness": [
                    150.0,
                    150.0,
                    300.0,
                    300.0,
                    300.0,
                    300.0,
                    300.0
                  ],
                  "InitialValues": [
                    0.0,
                    0.0,
                    0.0,
                    0.0,
                    0.0,
                    0.0,
                    0.0
                  ],
                  "InitialValuesUnits": 1,
                  "WaterTableConcentration": 0.0,
                  "D0": 0.0,
                  "Exco": null,
                  "FIP": null,
                  "DepthConstant": 0.0,
                  "MaxDepthSoluteAccessible": 0.0,
                  "RunoffEffectivenessAtMovingSolute": 0.0,
                  "MaxEffectiveRunoff": 0.0,
                  "Name": "Urea",
                  "ResourceName": null,
                  "Children": [],
                  "Enabled": true,
                  "ReadOnly": false
                }
              ],
              "Enabled": true,
              "ReadOnly": false
            },
            {
              "$type": "Models.Surface.SurfaceOrganicMatter, Models",
              "SurfOM": [],
              "Canopies": [],
              "InitialResidueName": "wheat_stubble",
              "InitialResidueType": "wheat",
              "InitialResidueMass": 500.0,
              "InitialStandingFraction": 0.0,
              "InitialCPR": 0.0,
              "InitialCNR": 7.44,
              "Name": "SurfaceOrganicMatter",
              "ResourceName": "SurfaceOrganicMatter",
              "Children": [],
              "Enabled": true,
              "ReadOnly": false
            },
            {
              "$type": "Models.PMF.Plant, Models",
              "Name": "Wheat",
              "ResourceName": "Wheat",
              "Children": [],
              "Enabled": true,
              "ReadOnly": false
            },
            {
              "$type": "Models.Manager, Models",
              "CodeArray": [
                "using Models.Interfaces;",
                "using APSIM.Shared.Utilities;",
                "using Models.Utilities;",
                "using Models.Soils;",
                "using Models.PMF;",
                "using Models.Core;",
                "using System;",
                "using System.Linq;",
                "using Models.Climate;",
                "",
                "namespace Models",
                "{",
                "    [Serializable]",
                "    public class Script : Model",
                "    {",
                "        [Link] private Clock Clock;",
                "        [Link] private Fertiliser Fertiliser;",
                "        [Link] private Summary Summary;",
                "        [Link] private Soil Soil;",
                "        private Accumulator accumulatedRain;",
                "        [Link]",
                "        private ISoilWater waterBalance;",
                "        ",
                "        [Description(\"Crop\")]",
                "        public IPlant Crop { get; set; }",
                "",
                "        [Description(\"Start of sowing window (d-mmm)\")]",
                "        public string StartDate { get; set; }",
                "",
                "        [Description(\"End of sowing window (d-mmm)\")]",
                "        public string EndDate { get; set; }",
                "",
                "        [Description(\"Minimum extractable soil water for sowing (mm)\")]",
                "        public double MinESW { get; set; }",
                "",
                "        [Description(\"Accumulated rainfall required for sowing (mm)\")]",
                "        public double MinRain { get; set; }",
                "",
                "        [Description(\"Duration of rainfall accumulation (d)\")]",
                "        public int RainDays { get; set; }",
                "",
                "        [Display(Type = DisplayType.CultivarName)]",
                "        [Description(\"Cultivar to be sown\")]",
                "        public string CultivarName { get; set; }",
                "",
                "        [Description(\"Sowing depth (mm)\")]",
                "        public double SowingDepth { get; set; }",
                "",
                "        [Description(\"Row spacing (mm)\")]",
                "        public double RowSpacing { get; set; }",
                "",
                "        [Description(\"Plant population (/m2)\")]",
                "        public double Population { get; set; }",
                "        ",
                "        ",
                "        [EventSubscribe(\"StartOfSimulation\")]",
                "        private void OnSimulationCommencing(object sender, EventArgs e)",
                "        {",
                "            accumulatedRain = new Accumulator(this, \"[Weather].Rain\", RainDays);",
                "        }",
                "",
                "        [EventSubscribe(\"DoManagement\")]",
                "        private void OnDoManagement(object sender, EventArgs e)",
                "        {",
                "            accumulatedRain.Update();",
                "            ",
                "            if (DateUtilities.WithinDates(StartDate, Clock.Today, EndDate) &&",
                "                !Crop.IsAlive &&",
                "                MathUtilities.Sum(waterBalance.ESW) > MinESW &&",
                "                accumulatedRain.Sum > MinRain)",
                "            {",
                "                Crop.Sow(population: Population, cultivar: CultivarName, depth: SowingDepth, rowSpacing: RowSpacing);    ",
                "            }",
                "        }",
                "    }",
                "}"
              ],
              "Parameters": [
                {
                  "Key": "Crop",
                  "Value": "[Wheat]"
                },
                {
                  "Key": "StartDate",
                  "Value": "1-may"
                },
                {
                  "Key": "EndDate",
                  "Value": "10-jul"
                },
                {
                  "Key": "MinESW",
                  "Value": "100"
                },
                {
                  "Key": "MinRain",
                  "Value": "25"
                },
                {
                  "Key": "RainDays",
                  "Value": "7"
                },
                {
                  "Key": "CultivarName",
                  "Value": "Hartog"
                },
                {
                  "Key": "SowingDepth",
                  "Value": "30"
                },
                {
                  "Key": "RowSpacing",
                  "Value": "250"
                },
                {
                  "Key": "Population",
                  "Value": "120"
                }
              ],
              "Name": "Sow using a variable rule",
              "ResourceName": null,
              "Children": [],
              "Enabled": true,
              "ReadOnly": false
            },
            {
              "$type": "Models.Manager, Models",
              "CodeArray": [
                "using Models.Soils;",
                "using System;",
                "using System.Linq;",
                "using Models.Core;",
                "using Models.PMF;",
                "namespace Models",
                "{",
                "    [Serializable]",
                "    public class Script : Model",
                "    {",
                "        [Link] Clock Clock;",
                "        [Link] Fertiliser Fertiliser;",
                "        ",
                "        [Description(\"Crop to be fertilised\")]",
                "        public IPlant Crop { get; set; }",
                "",
                "        [Description(\"Type of fertiliser to apply? \")] ",
                "        [Display(Type = DisplayType.FertiliserType)]public string FertiliserType { get; set; }",
                "    ",
                "        [Description(\"Amount of fertiliser to be applied (kg/ha)\")]",
                "        public double Amount { get; set; }",
                "        ",
                "        [EventSubscribe(\"Sowing\")]",
                "        private void OnSowing(object sender, EventArgs e)",
                "        {",
                "            Model crop = sender as Model;",
                "            if (Crop != null && crop.Name.ToLower() == (Crop as IModel).Name.ToLower())",
                "                Fertiliser.Apply(amount: Amount, type: FertiliserType);",
                "        }",
                "    }",
                "}"
              ],
              "Parameters": [
                {
                  "Key": "Crop",
                  "Value": "[Wheat]"
                },
                {
                  "Key": "FertiliserType",
                  "Value": "NO3N"
                },
                {
                  "Key": "Amount",
                  "Value": "160"
                }
              ],
              "Name": "Fertilise at sowing",
              "ResourceName": null,
              "Children": [],
              "Enabled": true,
              "ReadOnly": false
            },
            {
              "$type": "Models.Manager, Models",
              "CodeArray": [
                "using APSIM.Shared.Utilities;",
                "using Models.Utilities;",
                "using Models.Soils;",
                "using Models.PMF;",
                "using Models.Core;",
                "using System;",
                "using System.Linq;",
                "",
                "namespace Models",
                "{",
                "    [Serializable] ",
                "    public class Script : Model",
                "    {",
                "        [Description(\"Crop\")]",
                "        public IPlant Crop { get; set; }",
                "        ",
                "        [EventSubscribe(\"DoManagement\")]",
                "        private void OnDoManagement(object sender, EventArgs e)",
                "        {",
                "            if (Crop.IsReadyForHarvesting)",
                "            {",
                "                Crop.Harvest();",
                "                Crop.EndCrop();",
                "            }",
                "        }",
                "    }",
                "}",
                "       "
              ],
              "Parameters": [
                {
                  "Key": "Crop",
                  "Value": "[Wheat]"
                }
              ],
              "Name": "Harvest",
              "ResourceName": null,
              "Children": [],
              "Enabled": true,
              "ReadOnly": false
            },
            {
              "$type": "Models.Manager, Models",
              "CodeArray": [
                "using Models.Interfaces;",
                "using System;",
                "using System.Linq;",
                "using Models.Core;",
                "using System.Collections.Generic;",
                "using System.Text;",
                "using Models.Soils;",
                "using Models.PMF;",
                "using Models;",
                "using System.Xml.Serialization;",
                "using APSIM.Shared.Utilities;",
                "using Models.Interfaces;",
                "namespace Models",
                "{",
                "    [Serializable] ",
                "    public class Script : Model",
                "    {",
                "        [Link] private Zone zone;",
                "        [Link] private Irrigation irrigation;",
                "        [Link] private ISoilWater waterBalance;",
                "        [Link] private IPhysical soilPhysical;",
                "        public double FASW { get; set; }",
                "        public double WaterDeficit  { get; set; }",
                "    ",
                "",
                "",
                "        [Description(\"Crop to irrigate\")]",
                "        public IPlant Crop { get; set; }",
                "        ",
                "        [Description(\"Auto irrigation on?\")]",
                "        public bool AutoIrrigationOn { get; set; }",
                "",
                "        [Description(\"Threshold fraction available water (0-1)\")]",
                "        public double FASWThreshold { get; set; }",
                "",
                "        [Description(\"Soil depth (mm) to which fraction available water is calculated\")]",
                "        public double FASWDepth { get; set; }",
                "",
                "        [Description(\"Minimum weeks between irrigations\")]",
                "        public double weeks { get; set; }",
                "",
                "        [Description(\"Minimum days after sowing for first irrigation\")]",
                "        public int afterSowing { get; set; }",
                "",
                "        private double irrigationGap = 0;    // gap between irrigations",
                "",
                "        /// <summary>Called at start of simulation. Performs some basic error checking. </summary>",
                "        [EventSubscribe(\"StartOfSimulation\")]",
                "        private void ErrorChecking(object sender, EventArgs args)",
                "        {",
                "            if (Crop == null)",
                "                throw new Exception(\"No crop was specified in script \" + Parent.Name);",
                "        }",
                "",
                "        [EventSubscribe(\"DoManagement\")]",
                "        private void OnDoManagement(object sender, EventArgs e)",
                "        {",
                "            if (AutoIrrigationOn && Crop.IsAlive)",
                "            {",
                "                   irrigationGap += 1;                // increment gap between irrigations",
                "                CalculateFASW();                // calc FASW and WaterDeficit",
                "                if ((FASW < FASWThreshold) && (irrigationGap >= weeks * 7))",
                "                {",
                "                    irrigation.Apply(WaterDeficit, depth: 0);",
                "                    irrigationGap = 0;            // reset",
                "                }",
                "            }",
                "            else",
                "            {",
                "                irrigationGap = weeks * 7 - afterSowing - 1;    // allow irrigation a number of days after it becomes alive/sown",
                "            }",
                "        }",
                "",
                "        // Calculate the fraction of the potential available sw",
                "        // Calculate the deficit amount from DUL",
                "        private void CalculateFASW()",
                "        {",
                "            double[] LL15 = MathUtilities.Multiply(soilPhysical.LL15, soilPhysical.Thickness);",
                "            double[] DUL = MathUtilities.Multiply(soilPhysical.DUL, soilPhysical.Thickness);",
                "        ",
                "            int nlayr = GetLayerIndex(FASWDepth);",
                "            nlayr = Math.Min(nlayr, soilPhysical.Thickness.Length-1);",
                "            double cumdep = MathUtilities.Sum(soilPhysical.Thickness, 0, nlayr, 0.0);    // tricky function that sums up to before nlayr",
                "",
                "            double part_layer = MathUtilities.Divide((FASWDepth - cumdep), soilPhysical.Thickness[nlayr], 0.0);",
                "",
                "            // note that results may be strange if swdep < ll15",
                "            double avail_sw = (MathUtilities.Sum(waterBalance.SWmm, 0, nlayr, 0.0) + part_layer * waterBalance.SWmm[nlayr])",
                "                            - (MathUtilities.Sum(LL15, 0, nlayr, 0.0) + part_layer * LL15[nlayr]);",
                "",
                "            double pot_avail_sw = (MathUtilities.Sum(DUL, 0, nlayr, 0.0) + part_layer * DUL[nlayr])",
                "                                - (MathUtilities.Sum(LL15, 0, nlayr, 0.0) + part_layer * LL15[nlayr]);",
                "            ",
                "            FASW = MathUtilities.Divide(avail_sw, pot_avail_sw, 0.0);",
                "            WaterDeficit = MathUtilities.Constrain(pot_avail_sw - avail_sw, 0.0, 100000);",
                "        }",
                "",
                "        // Get index of the layer that has this depth in it ",
                "        private int GetLayerIndex(double pointDepth)",
                "        {",
                "            double[] cumThickness = soilPhysical.ThicknessCumulative;",
                "            int layerIdx = 0;",
                "            while ((layerIdx < cumThickness.Length) && (pointDepth > cumThickness[layerIdx]))",
                "            {",
                "                layerIdx += 1;",
                "            }",
                "",
                "            return layerIdx;",
                "        }",
                "    }",
                "}"
              ],
              "Parameters": [
                {
                  "Key": "Crop",
                  "Value": "[Wheat]"
                },
                {
                  "Key": "AutoIrrigationOn",
                  "Value": "True"
                },
                {
                  "Key": "FASWThreshold",
                  "Value": "0.9"
                },
                {
                  "Key": "FASWDepth",
                  "Value": "600"
                },
                {
                  "Key": "weeks",
                  "Value": "0"
                },
                {
                  "Key": "afterSowing",
                  "Value": "2"
                }
              ],
              "Name": "Automatic irrigation based on water deficit",
              "ResourceName": null,
              "Children": [],
              "Enabled": true,
              "ReadOnly": false
            },
            {
              "$type": "Models.Manager, Models",
              "CodeArray": [
                "using System;",
                "using System.Collections.Generic;",
                "using System.IO;",
                "using System.Linq;",
                "using Models.Core;",
                "using Models.Soils;",
                "using Models.Climate;",
                "using Models.PMF;",
                "using Models;",
                "using APSIM.Shared.Utilities;",
                "using Models.Interfaces;",
                "using System.Globalization; ",
                "using System.Xml.Serialization;",
                "",
                "",
                "[Serializable]",
                "public class SoilWaterUpdate : Model",
                "{",
                "    [Link] private ISoilWater waterBalance;  // Ensure this links to your soil's water model",
                "    [Link] private Clock Clock;",
                "    [Link] private Summary Summary;",
                "",
                "    [Description(\"Full path to the sensor data CSV file\")]",
                "    public string FilePath { get; set; }",
                "",
                "    // Store updates as Date -> List of (Layer, SW) pairs",
                "    private Dictionary<DateTime, List<(int Layer, double SW)>> dailySWData = ",
                "        new Dictionary<DateTime, List<(int, double)>>();",
                "",
                "    [EventSubscribe(\"Commencing\")]",
                "    private void OnCommencing(object sender, EventArgs e)",
                "    {",
                "        Summary.WriteMessage(this, \"LOADING SENSOR DATA\", MessageType.Diagnostic);",
                "        if (!File.Exists(FilePath))",
                "            throw new Exception($\"File not found: {FilePath}\");",
                "",
                "        foreach (var line in File.ReadLines(FilePath).Skip(1))",
                "        {",
                "            if (string.IsNullOrWhiteSpace(line)) continue;",
                "",
                "            var parts = line.Split(',');",
                "            if (parts.Length < 3) continue;",
                "",
                "            if (DateTime.TryParse(parts[0], out DateTime date) &&",
                "                int.TryParse(parts[1], out int layer) &&",
                "                double.TryParse(parts[2], NumberStyles.Any, CultureInfo.InvariantCulture, out double sw))",
                "            {",
                "                if (!dailySWData.ContainsKey(date))",
                "                    dailySWData[date] = new List<(int, double)>();",
                "                ",
                "                dailySWData[date].Add((layer, sw));",
                "            }",
                "        }",
                "        Summary.WriteMessage(this, $\"First 5 loaded dates: {string.Join(\", \", dailySWData.Keys.OrderBy(d => d).Take(5))}\", MessageType.Diagnostic);",
                "        Summary.WriteMessage(this, \"DATA\",MessageType.Diagnostic);",
                "        // Build a string that represents the content of dailySWData:",
                "        string dailyDataText = string.Join(Environment.NewLine, ",
                "        dailySWData.OrderBy(kvp => kvp.Key).Select(kvp => $\"{kvp.Key:yyyy-MM-dd}: {string.Join(\"; \", kvp.Value.Select(update => $\"Layer {update.Layer} -> SW {update.SW}\"))}\"));",
                "",
                "        Summary.WriteMessage(this, dailyDataText, MessageType.Diagnostic);",
                "    }",
                "",
                "    //[EventSubscribe(\"DoDailyFinalisation\")]  // Update at end of day",
                "    [EventSubscribe(\"StartOfDay\")]",
                "    private void UpdateSoilWater(object sender, EventArgs e)",
                "    {",
                "        DateTime today = Clock.Today;",
                "        if (dailySWData.TryGetValue(today, out var updates))",
                "        {",
                "            foreach (var (layer, sw) in updates)",
                "            {",
                "                if (layer >= 0 && layer < waterBalance.SWmm.Length)",
                "                {",
                "                    Summary.WriteMessage(this, $\"BEFORE VALUE: {waterBalance.SWmm[layer]}\",MessageType.Diagnostic);",
                "                    waterBalance.SWmm[layer] = sw;  // Update current soil water",
                "                    Summary.WriteMessage(this, ",
                "                        $\"Updated layer {layer} SW to {sw} on {today:yyyy-MM-dd}\", ",
                "                        MessageType.Diagnostic);",
                "                }",
                "            }",
                "        }",
                "    }",
                "}"
              ],
              "Parameters": [
                {
                  "Key": "FilePath",
                  "Value": "/home/eathanasakis/Intership/MultiAgent_Apsimx/APSIM_FILES/Wheat_soil_moisture_data.txt"
                }
              ],
              "Name": "SoilWaterUpdate",
              "ResourceName": null,
              "Children": [],
              "Enabled": true,
              "ReadOnly": false
            }
          ],
          "Enabled": true,
          "ReadOnly": false
        },
        {
          "$type": "Models.Graph, Models",
          "Caption": null,
          "Axis": [
            {
              "$type": "APSIM.Shared.Graphing.Axis, APSIM.Shared",
              "Title": "Date",
              "Position": 3,
              "Inverted": false,
              "CrossesAtZero": false,
              "LabelOnOneLine": false,
              "Minimum": null,
              "Maximum": null,
              "Interval": null
            },
            {
              "$type": "APSIM.Shared.Graphing.Axis, APSIM.Shared",
              "Title": null,
              "Position": 0,
              "Inverted": false,
              "CrossesAtZero": false,
              "LabelOnOneLine": false,
              "Minimum": null,
              "Maximum": null,
              "Interval": null
            }
          ],
          "LegendPosition": 0,
          "LegendOrientation": 0,
          "AnnotationLocation": 0,
          "DisabledSeries": [],
          "LegendOutsideGraph": false,
          "Name": "Graph",
          "ResourceName": null,
          "Children": [
            {
              "$type": "Models.Series, Models",
              "Type": 1,
              "XAxis": 3,
              "YAxis": 0,
              "ColourArgb": -16777216,
              "FactorToVaryColours": null,
              "FactorToVaryMarkers": null,
              "FactorToVaryLines": null,
              "Marker": 0,
              "MarkerSize": 0,
              "Line": 4,
              "LineThickness": 0,
              "TableName": "Report",
              "XFieldName": "Clock.Today",
              "YFieldName": "Yield_per_square_meter",
              "X2FieldName": null,
              "Y2FieldName": null,
              "ShowInLegend": false,
              "IncludeSeriesNameInLegend": false,
              "Cumulative": false,
              "CumulativeX": false,
              "Filter": null,
              "Name": "tonnes_per_square_meter",
              "ResourceName": null,
              "Children": [],
              "Enabled": false,
              "ReadOnly": false
            },
            {
              "$type": "Models.Series, Models",
              "Type": 1,
              "XAxis": 3,
              "YAxis": 0,
              "ColourArgb": -3376729,
              "FactorToVaryColours": null,
              "FactorToVaryMarkers": null,
              "FactorToVaryLines": null,
              "Marker": 0,
              "MarkerSize": 0,
              "Line": 4,
              "LineThickness": 0,
              "TableName": "Report",
              "XFieldName": "Clock.Today",
              "YFieldName": "yield_tonnes_per_hectare",
              "X2FieldName": null,
              "Y2FieldName": null,
              "ShowInLegend": false,
              "IncludeSeriesNameInLegend": false,
              "Cumulative": false,
              "CumulativeX": false,
              "Filter": null,
              "Name": "tonnes_per_hectare",
              "ResourceName": null,
              "Children": [],
              "Enabled": true,
              "ReadOnly": false
            }
          ],
          "Enabled": true,
          "ReadOnly": false
        },
        {
          "$type": "Models.Graph, Models",
          "Caption": null,
          "Axis": [
            {
              "$type": "APSIM.Shared.Graphing.Axis, APSIM.Shared",
              "Title": null,
              "Position": 3,
              "Inverted": false,
              "CrossesAtZero": false,
              "LabelOnOneLine": false,
              "Minimum": null,
              "Maximum": null,
              "Interval": null
            },
            {
              "$type": "APSIM.Shared.Graphing.Axis, APSIM.Shared",
              "Title": null,
              "Position": 0,
              "Inverted": false,
              "CrossesAtZero": false,
              "LabelOnOneLine": false,
              "Minimum": null,
              "Maximum": null,
              "Interval": null
            }
          ],
          "LegendPosition": 0,
          "LegendOrientation": 0,
          "AnnotationLocation": 0,
          "DisabledSeries": [],
          "LegendOutsideGraph": false,
          "Name": "WaterApplied",
          "ResourceName": null,
          "Children": [
            {
              "$type": "Models.Series, Models",
              "Type": 1,
              "XAxis": 3,
              "YAxis": 0,
              "ColourArgb": -11094807,
              "FactorToVaryColours": null,
              "FactorToVaryMarkers": null,
              "FactorToVaryLines": null,
              "Marker": 0,
              "MarkerSize": 0,
              "Line": 0,
              "LineThickness": 0,
              "TableName": "Report",
              "XFieldName": "Clock.Today",
              "YFieldName": "waterApplied",
              "X2FieldName": null,
              "Y2FieldName": null,
              "ShowInLegend": false,
              "IncludeSeriesNameInLegend": false,
              "Cumulative": false,
              "CumulativeX": false,
              "Filter": null,
              "Name": "Water_Applied",
              "ResourceName": null,
              "Children": [],
              "Enabled": true,
              "ReadOnly": false
            }
          ],
          "Enabled": true,
          "ReadOnly": false
        }
      ],
      "Enabled": true,
      "ReadOnly": false
    },
    {
      "$type": "Models.Storage.DataStore, Models",
      "useFirebird": false,
      "CustomFileName": null,
      "Name": "DataStore",
      "ResourceName": null,
      "Children": [],
      "Enabled": true,
      "ReadOnly": false
    }
  ],
  "Enabled": true,
  "ReadOnly": false
}